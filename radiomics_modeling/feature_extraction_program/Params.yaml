# author: Xia Wei, xiaw@sibet.ac.cn
# paper: Deep Learning for Automatic Differential Diagnosis of
# Primary Central Nervous System Lymphoma and
# Glioblastoma: Multi-parametric MRI based Convolutional
# Neural Network Model
# date: 02/13/2021

# parameter file for radiomics modelling


# It is written according to the YAML-convention (www.yaml.org) and is checked by the code for consistency.
# Three types of parameters are possible and reflected in the structure of the document:
#
# Parameter category:
#   Setting Name: <value>
#
# The three parameter categories are:
# - setting: Setting to use for preprocessing and class specific settings. if no <value> is specified, the value for
#   this setting is set to None.
# - featureClass: Feature class to enable, <value> is list of strings representing enabled features. If no <value> is
#   specified or <value> is an empty list ('[]'), all features for this class are enabled.
# - imageType: image types to calculate features on. <value> is custom kwarg settings (dictionary). if <value> is an
#   empty dictionary ('{}'), no custom settings are added for this input image.
#
# Some parameters have a limited list of possible values. Where this is the case, possible values are listed in the
# package documentation

# Settings to use, possible settings are listed in the documentation (section "Customizing the extraction").
setting:
  binWidth: 32  # binCount: 32
  label: 1
#  interpolator: 'sitkBSpline' # This is an enumerated value, here None is not allowed
  # This disables resampling, as it is interpreted as None, to enable it, specify spacing in x, y, z as [x, y , z]
#  resampledPixelSpacing: [1,1,0.5]
#  weightingNorm: # If no value is specified, it is interpreted as None
  correctMask: True
  preCrop: True
  normalize: True  # image = sitk.Normalize(image)
  # normalizeScale:1000 # image = image * normalizeScale

  #geometryTolerance:
# Image types to use: "Original" for unfiltered image, for possible filters, see documentation.
imageType:
  Original: {} # for dictionaries / mappings, None values are not allowed, '{}' is interpreted as an empty dictionary
#  Gradient: {}
  Wavelet: {}
#  LoG: {'sigma' : [0.6,0.8,1, 1.2]}
#  Logarithm: {}
#  LBP2D: {}
#  Square: {} #Takes the square of the image intensities and linearly scales them back to the original range.
#  SquareRoot: {} #Takes the square root of the absolute image intensities and scales them back to original range. Negative values in the original image will be made negative again after application of filter
#  Exponential: {} #Takes the the exponential, where filtered intensity is e^(absolute intensity). Values are scaled to original range and negative original values are made negative again after application of filter.
#  LBP3D: {}
# Featureclasses, from which features must be calculated. If a featureclass is not mentioned, no features are calculated
# for that class. Otherwise, the specified features are calculated, or, if none are specified, all are calculated (excluding redundant/deprecated features).
featureClass:
  shape:
  # redundant Compactness 1, Compactness 2 an Spherical Disproportion features are disabled by default, they can be
  # enabled by specifying individual feature names (as is done for glcm) and including them in the list.
  firstorder: [] # specifying an empty list has the same effect as specifying nothing.
  glcm:  # Disable SumAverage by specifying all other GLCM features available
  glrlm: # for lists none values are allowed, in this case, all features are enabled
  glszm:
  gldm:  # contains deprecated features, but as no individual features are specified, the deprecated features are not enabled
  ngtdm:
